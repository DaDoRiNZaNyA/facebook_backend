generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String?
  lastName  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  following Follow[]  @relation("Following")
  followers Follow[]  @relation("Followers")
  posts     Post[]    @relation("UserPosts")
  Like      Like[]    @relation("UserLikes")
  Comment   Comment[] @relation("UserComments")
}

model Post {
  id        Int       @id @default(autoincrement())
  userId    Int
  text      String
  media     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation("UserPosts", fields: [userId], references: [id])
  Like      Like[]    @relation("PostLikes")
  Comment   Comment[] @relation("PostComments")
}

model Follow {
  id          Int      @id @default(autoincrement())
  followerId  Int
  followingId Int
  createdAt   DateTime @default(now())
  follower    User     @relation("Following", fields: [followerId], references: [id])
  following   User     @relation("Followers", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
}

model Like {
  id        Int      @id @default(autoincrement())
  userId    Int
  postId    Int
  isLike    Boolean
  createdAt DateTime @default(now())

  user User @relation("UserLikes", fields: [userId], references: [id])
  post Post @relation("PostLikes", fields: [postId], references: [id])

  @@unique([userId, postId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  userId    Int
  postId    Int
  parentId  Int?
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User      @relation("UserComments", fields: [userId], references: [id])
  post    Post      @relation("PostComments", fields: [postId], references: [id])
  parent  Comment?  @relation("CommentReplies", fields: [parentId], references: [id])
  replies Comment[] @relation("CommentReplies")

  @@index([parentId])
}
